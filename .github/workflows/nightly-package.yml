name: Nightly Package

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch: # adding the workflow_dispatch so it can be triggered manually
    inputs:
      package_type:
        type: string
        description: 'Package type, defaults to nightly.'
        default: 'nightly'
        required: false
      package_stable:
        type: boolean
        description: 'Publish a stable release. Do not use on unstable branches!'
        default: false
        required: false
      package_stability_hash:
        type: string
        description: 'If publishing a stable release, confirm by entering the commit hash (full):'
        default: ''
        required: false

jobs:

  check-date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v3
      - name: print latest_commit
        run: echo ${{ github.sha }}
      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  package:
    needs: check-date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src
    steps:
      - uses: actions/checkout@v3
      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=sha_long::$(git rev-parse HEAD)"
      - name: Validate parameters
        run: |
          if [[ "${{ inputs.package_stable }}" = true && "${{ inputs.package_stability_hash }}" != "${{ steps.vars.outputs.sha_long }}" ]]
          then
            exit 1
          fi
          echo "Valid commit hash '${{ inputs.package_stability_hash }}'"
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build release
        run: dotnet build --no-restore -c release /p:VersionCommitHash=${{ steps.vars.outputs.sha_short }} /p:VersionOverride=${{ inputs.version_override }}
      - name: Package release
        run: dotnet pack -c release -o:package /p:VersionCommitHash=${{ steps.vars.outputs.sha_short }} /p:VersionOverride=${{ inputs.version_override }}
      - name: Nuget push github
        run: dotnet nuget push ./package/*.nupkg --source https://nuget.pkg.github.com/aerialbyte/index.json --api-key ${{ github.token }}
